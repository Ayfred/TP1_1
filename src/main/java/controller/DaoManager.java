package controller;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;

import model.Todo;


public class DaoManager {

private static DaoManager instance = null;
private Connection connection = null;

private static final Logger log = Logger.getLogger("TP1_1");
private int autoGeneratedIdFromDatabase;

private DaoManager() {

try {
  Class.forName("org.sqlite.JDBC");
  connection = DriverManager.getConnection("jdbc:sqlite:c:/Users/maxim/git/TodoList/TP1_1/src/main/db/todo.db");
} catch (Exception e) {
   System.err.println(e.getClass().getName() + ": " + e.getMessage());
   System.exit(0);
}
   System.out.println("Opened database successfully");
  log.info("Opened database successfully");

   createDatabase();
}

public static DaoManager getInstance() {
  if (instance == null) {
    instance = new DaoManager();
  }
  return instance;
}

private void createDatabase() {
  try {
    Statement stmt = connection.createStatement();
    String sql = "CREATE TABLE IF NOT EXISTS TODO ( ID INTEGER PRIMARY KEY AUTOINCREMENT, TEXTE TEXT NOT NULL, ACTIF BOOLEAN NOT NULL)";

    stmt.executeUpdate(sql);
    stmt.close();

   } catch (Exception e) {
       log.severe( e.getClass().getName() + ": " + e.getMessage() );
   }
}



public void addTodo(Todo todo){

  try {
    PreparedStatement preparedStatment = connection.prepareStatement("insert into TODO(TEXTE,ACTIF) values( ? , ? )" );

    preparedStatment.setString(1, todo.getTexte() );
    preparedStatment.setBoolean(2, todo.isActif() );

    preparedStatment.execute();
    
    ResultSet rs = preparedStatment.getGeneratedKeys();
    if (rs.next()) {
       autoGeneratedIdFromDatabase = rs.getInt(1);
       todo.setId( autoGeneratedIdFromDatabase );
    }
    preparedStatment.close();
    
  } catch (Exception e) {
     log.severe( e.getClass().getName() + ": " + e.getMessage() );
   }
}

public void deleteTodo(Todo todo) {
	try {
	    PreparedStatement preparedStatment = connection.prepareStatement("DELETE FROM TODO WHERE ID =?");

	    preparedStatment.setInt(1, todo.getId());
	    preparedStatment.execute();
	    preparedStatment.close();
	    
	  } catch (Exception e) {
	     log.severe( e.getClass().getName() + ": " + e.getMessage() );
	   }
}



public List<Todo> getAllTodo(){
   List<Todo> returnListTodo = new ArrayList<Todo>();
   try {
      Statement statement = connection.createStatement();

      if ( statement.execute( "Select * FROM TODO " ) ){
        ResultSet resultSet = statement.getResultSet();
        while ( resultSet.next() ) {
          String texte = resultSet.getString("TEXTE");
          boolean actif = resultSet.getBoolean("ACTIF");
          int id = resultSet.getInt(1);

          returnListTodo.add( new Todo( texte , actif, id));
        }
       }
       statement.close();

    } catch (Exception e) {
        log.severe( e.getClass().getName() + ": " + e.getMessage() );
    }
     return returnListTodo;
  }

public void setActif(Todo todo, boolean actif) {
	 	PreparedStatement preparedStatment;
	 	System.out.println("efrzgtehe : " + actif);
	 	System.out.println("efrzgtehe : " + todo.getTexte());
	 	System.out.println("efrzgtehe : " + todo.getId());

	try {
		if(actif) {
		    preparedStatment = connection.prepareStatement("UPDATE TODO SET ACTIF = 1 WHERE ID =?");
		}
		else {
		    preparedStatment = connection.prepareStatement("UPDATE TODO SET ACTIF = 0 WHERE ID =?");
		}
	    preparedStatment.setInt(1, todo.getId());

	    preparedStatment.execute();
	    preparedStatment.close();
	    
	  } catch (Exception e) {
	     log.severe( e.getClass().getName() + ": " + e.getMessage() );
	   }
	
	}

public void unCheck(Todo todo) {
	try {
	    PreparedStatement preparedStatment = connection.prepareStatement("UPDATE TODO SET ACTIF = 0 WHERE ID =?");
	    preparedStatment.setInt(1, todo.getId());
	    preparedStatment.execute();
	    preparedStatment.close();
	    
	  } catch (Exception e) {
	     log.severe( e.getClass().getName() + ": " + e.getMessage() );
	   }
	
}
}